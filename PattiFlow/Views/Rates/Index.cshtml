@model PattiFlow.Models.PurchaseModel
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
<script src="~/Scripts/jquery-1.10.2.js"></script>
<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/JsGrid/css/jsgrid.css" rel="stylesheet" />
<link href="~/JsGrid/css/theme.css" rel="stylesheet" />
<script src="~/JsGrid/dist/jsgrid.min.js"></script>
<script type="text/javascript">
    jQuery(document).ready(function ($) {
        $('#agent a').on('click', dropdownToggleAgent);

        function dropdownToggleAgent() {
            var dropdown = $(this).parent().parent().prev();
            dropdown.html($(this).html() + '&nbsp;</i><span class="caret"></span>');
            dropdown.val($(this).prop('data-value'));
            $('#AgentName').val($(this).html());
        }

        $('#btnSubmit').click(function () {
            var AgentName = $('#AgentName').val();
            var Place = $('#Place').val();

            $("#jsGrid").jsGrid({
                width: "100%",
                height: "400px",
                inserting: true,
                editing: true,
                sorting: true,
                paging: true,
                autoload: true,
                controller: {
                    loadData: function (filter) {
                        return $.ajax({
                            type: "GET",
                            contentType: "application/json",
                            data: { agentName: AgentName, place: Place },
                            url: "Rates/GetData"
                        }).done(function (response) {
                            console.log(response);
                        });
                    },
                },
                onRefreshing: function (args) {
                    if (args.grid.data.length > 0) {
                        for (var i = 0; i < args.grid.data.length; i++) {
                            args.grid.data[i]["Invoice No"] = args.grid.data[i]["InvoiceNo"];
                            args.grid.data[i]["Item Name"] = args.grid.data[i]["ItemDescription"];
                            args.grid.data[i]["No Of Gunnies"] = args.grid.data[i]["NumberOfGunnies"];
                            args.grid.data[i]["Bag Weight"] = args.grid.data[i]["BagWeight"];
                            args.grid.data[i]["Net Weight"] = args.grid.data[i]["NetWeight"];

                        }
                    }
                },

                onInit: function (args) { },
                fields: [
                    { name: "Date", type: "text", width: 40 },
                    { name: "Invoice No", type: "text", width: 40 },
                    { name: "Item Name", type: "text", width: 40 },
                    { name: "No Of Gunnies", type: "number", width: 40 },
                    { name: "Bag Weight", type: "number", width: 40 },
                    { name: "Net Weight", type: "text", width: 40 },
                    { name: "Rate", type: "text", width: 40 },
                    { name: "Invoice Amount", type: "text", width: 40 },
                    { type: "control" }
                ]
            });

        })
        $('#agent a').on('click', dropdownToggleAgent);
        $("#jsGrid").jsGrid({
            width: "100%",
            height: "400px",
            inserting: true,
            editing: true,
            sorting: true,
            paging: true,
            autoload: true,
            controller: {
                loadData: function (filter) {
                    return $.ajax({
                        type: "GET",
                        contentType: "application/json",
                        url: "GetData"
                    }).done(function (response) {
                        console.log(response);
                    });
                },
            },
            onRefreshing: function (args) {
                if (args.grid.data.length > 0) {
                    for (var i = 0; i < args.grid.data.length; i++) {
                        args.grid.data[i]["Invoice No"] = args.grid.data[i]["InvoiceNo"];
                        args.grid.data[i]["Item Name"] = args.grid.data[i]["ItemDescription"];
                        args.grid.data[i]["No Of Gunnies"] = args.grid.data[i]["NumberOfGunnies"];
                        args.grid.data[i]["Bag Weight"] = args.grid.data[i]["BagWeight"];
                        args.grid.data[i]["Net Weight"] = args.grid.data[i]["NetWeight"];

                    }
                }
            },

            onInit: function (args) { },
            fields: [
                { name: "Date", type: "text", width: 40 },
                { name: "Invoice No", type: "text", width: 40 },
                { name: "Item Name", type: "text", width: 40 },
                { name: "No Of Gunnies", type: "number", width: 40 },
                { name: "Bag Weight", type: "number", width: 40 },
                { name: "Net Weight", type: "text", width: 40 },
                { name: "Rate", type: "text", width: 40 },
                { name: "Invoice Amount", type: "text", width: 40 },
                { type: "control" }
            ]
        });
    })

    function dropdownToggleAgent() {
        // select the main dropdown button element
        var dropdown = $(this).parent().parent().prev();

        // change the CONTENT of the button based on the content of selected option
        dropdown.html($(this).html() + '&nbsp;</i><span class="caret"></span>');

        // change the VALUE of the button based on the data-value property of selected option
        dropdown.val($(this).prop('data-value'));

        $('#AgentName').val($(this).html());
    }



</script>

<div class="form-group">
    <div class="form-row">
        <div class="col-md-3" style="top:30px">
            @Html.LabelFor(model => model.AgentName)
            <input type="hidden" id="AgentName" name="AgentName" value="" />
            <div class="dropdown">
                <button class="btn btn-default dropdown-toggle col-md-12" type="button" data-toggle="dropdown">
                    Select
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" id="agent">
                    @foreach (var item in ViewBag.Agents)
                    {
                        <li><a href="#" data-value="1">@item</a></li>
                    }

                </ul>
            </div>
            @Html.ValidationMessageFor(model => model.AgentName, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-3" style="top:30px">
            @Html.LabelFor(model => model.Place)
            @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-3" style="top:55px">
            <input type="submit" value="Submit" id="btnSubmit" class="btn btn-primary" />
        </div>
    </div>
</div>


<div id="jsGrid" style="top:70px"></div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}